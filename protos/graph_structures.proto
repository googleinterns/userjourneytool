syntax = "proto2";
package ujt_protos;

// functionally required fields declared at the top of each message
// separated by ---

message Node { // all names are fully qualified (grandparent.parent.this_node.child)
    optional NodeType node_type = 1;
    optional string name = 2;  // a fully qualified, period delimited name
    // ---

    repeated string child_names = 3;
    optional string parent_name = 4;

    optional Status status = 5;
    repeated Dependency dependencies = 6;
    repeated SLI slis = 7;
    optional string comment = 8;
    optional Status override_status = 9;
}

message Dependency {
    optional string target_name = 1;
    optional string source_name = 2;
    // ---

    optional bool toplevel = 3;
    optional string comment = 4;
}

message SLI {
    optional string node_name = 1;
    // ---

    optional SLIType sli_type = 2;
    optional double sli_value = 3;
    optional double slo_error_upper_bound = 4;
    optional double slo_error_lower_bound = 5;
    optional double slo_warn_upper_bound = 6;
    optional double slo_warn_lower_bound = 7;

    optional Status status = 8;
    optional string comment = 9;
}

message UserJourney {
    optional string name = 1;
    optional string client_name = 2;
    // ---

    // a set of top level dependencies originating from Clients
    repeated Dependency dependencies = 3;
    optional Status status = 4;
}

message Client {
    optional string name = 1;
    repeated UserJourney user_journeys = 2;
    // ---
}

message VirtualNode {
    optional string name = 1;
    repeated string child_names = 2;
    optional bool collapsed = 3;
    optional NodeType node_type = 4 [default = NODETYPE_VIRTUAL]; // should always be NODETYPE_VIRTUAL, used for duck typing

    // ---
    optional Status status = 5;
    optional string comment = 6;
    optional Status override_status = 7;
}

enum Status {
    STATUS_UNSPECIFIED = 0;
    STATUS_HEALTHY = 1;
    STATUS_WARN = 2;
    STATUS_ERROR = 3;
}

enum SLIType {
    SLITYPE_UNSPECIFIED = 0;
    SLITYPE_AVAILABILITY = 1;
    SLITYPE_LATENCY = 2;
    SLITYPE_THROUGHPUT = 3;
}

enum NodeType {
    NODETYPE_UNSPECIFIED = 0;
    NODETYPE_ENDPOINT = 1;
    NODETYPE_SERVICE = 2;
    NODETYPE_SYSTEM = 3;
    NODETYPE_VIRTUAL = 4;
}
